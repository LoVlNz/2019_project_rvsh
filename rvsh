#!/bin/bash
create_virtuelle_machine(){
	
	echo "create vm succseeful"

}
normal_commande(){
	if [ "$1" == "q" ]
	then
		if [ $user == "admin" ]
		then
			./outils/admin_logout
		else
			echo "exit with user"

			./outils/user_logout $user $machine
			sed -i "/^$id $user $machine/d" ./rv/online_users_id
		fi
		flag=2
		state=4
		
	elif [ "$1" == "connect" ]
	then
		state=2
		return 0
	elif [ "$1" == "su" ]
	then
		state=3
		return 0
	elif [ "$1" == "rhost" ]
	then
		for dir in $(ls ./rv/vms)
		do
			if [ -d ./rv/vms/$dir ]
			then
				echo $dir
			fi
		done
	elif [ "$1" == "write" ]
	then
		a=$(echo $2 | awk 'BEGIN{FS="@"}{print $1}')
		#a=user name
		b=$(echo $2 | awk 'BEGIN{FS="@"}{print $2}')
		#b=machine name
		./outils/check_file ./rv/vms/$b/$a/message_new
		if [ $? == 1 ]
		then
			echo message from $user@$machine   time:$(date) >>./rv/vms/$b/$a/message_new
			for ((i=3;i<=$#;i=i+1)); 
			do
				printf "${!i} ">>./rv/vms/$b/$a/message_new
			done
		else 
			echo "please entre the rignt arguments"
		fi
		return 0
	elif [ "$1" == "test" ]
	then
	       	echo "test"
		return 0
	elif [ "$1" == "who" ]
	then
		while read line
		do
			mac=$(echo $line | cut -d " " -f3)
			if [ $mac == $machine ]
			then
				nnname=$(echo $line | cut -d " " -f2)
				heure=$(echo $line | cut -d " " -f7)
				num=$(echo $line | cut -d " " -f1)
				echo -e "$nnname\tpts/$num\t$heure"
			fi
		done<./rv/online_users_id
		return 0
	elif [ "$1" == "rusers" ]
	then
		while read line
		do
			nnname=$(echo $line | cut -d " " -f1)
			mmmachine=$(echo $line | cut -d " " -f2)
			here=$(echo $line | cut -d " " -f7)
			echo -e "$nnname\t$mmmachine\t$here"
		done<./rv/online_data
		return 0
	elif [ "$1" == "passwd" ]
	then
			./outils/change_passwd $user 

	elif [ "$1" == "finger" ]
	then
		if [ $# == 1 ]
		then
			tmpname=$user
		else
			tmpname=$2
		fi
		if [ $tmpname == "admin" ]
		then
			echo "Login: admin Name:admin"
			echo "Directory:$(pwd)/rv/admin Shell:$(pwd)/rvsh"
			cat ./rv/log_admin
			echo "No mail"
			echo "No plan"
		else
			./outils/check_file ./rv/users/$tmpname
			if [ $? == 1 ]
			then
				echo "Login: $tmpname Name:$tmpname"
				echo "Directory:$(pwd)/rv/users/$tmpname Shell:$(pwd)/rvsh"
				cat ./rv/users/$tmpname/log_info
				echo "No mail"
				echo "No plan"
			else
				echo "user $tmpname not found"
				return 1
			fi
		fi
	else 
		return 1
	fi
	#echo $1 normal_commande
	return 0

}
special_commande(){
	if [ "$1" == "host" ]
	then
		./outils/check_file ./rv/vms/$2
		if [ $? == 1 ]
		then
			echo "host exit"
		else
			mkdir ./rv/vms/$2
			echo "host established successfully"
		fi
	elif [ "$1" == "afinger" ]
	then
		if [ $# == 1 ]
		then
			tmpname=admin
		else
			tmpname=$2
		fi
		if [ $tmpname == "admin" ]
		then
			echo "Login: admin Name:admin"
			echo "Directory:$(pwd)/rv/admin Shell:$(pwd)/rvsh"
			cat ./rv/log_admin
			echo "No mail"
			echo "No plan"
		else
			./outils/check_file ./rv/users/$tmpname
			if [ $? == 1 ]
			then
				echo "Login: $tmpname Name:$tmpname"
				echo "Directory:$(pwd)/rv/users/$tmpname Shell:$(pwd)/rvsh"
				cat ./rv/users/$tmpname/log_info
				echo "No mail"
				echo "No plan"
			else
				echo "user $tmpname not found"
				return 1
			fi
		fi
	elif [ "$1" == "users" ]
	then
		while read line
		do
			name=$(echo "$line" | cut -d ":" -f1)
			if [ "$2" == "$name" ]
			then
				echo "Error:user exit"
				return 0
			fi
		done<./rv/userlist
		echo "set the password:"
		read passwd
		echo $2:$passwd >> ./rv/userlist
		mkdir ./rv/users/$2
		echo "add user successfully"
	else
		echo "no command found"
	fi
	return 0
}
run(){
	
	


#	while [ $state -eq 1 ]
#	do 
#		if [ 1 != $(cat ./rv/vms/$machine/$user/message_new | wc -c) ]

#	then
#	./outils/check_message $machine $user
	
#	fi
#	wait

#done
	
sleep 1
	while [ $state -eq 1 ]
#for ((i=1;i>=$state;i=i))
do
	{
	
	stty erase ^H
	read -p "$1" commande
	normal_commande $commande
	if [ $? -eq 1 ] 
	then
		if [ "$2" == "-s" ]
		then
				special_commande $commande
		else
			echo "pleas entre the right commande"
		fi
	fi
	
} 

done
 }

run_commande(){
if [ "$mode" == "-connect" ]
then
	a=$#
	#check_argument
	if [ $# != 3 ]
	then 
		echo "wrong number of the arguments"
		exit 1
	fi
	./outils/user_login $user $machine $usernum
	if [ $? == 1 ]
	then
		exit 1
	fi
	#check_utilisateur||machine
	./outils/check_passwd $user ./rv/userlist
	if [ $? == 1 ]
	then
		exit 1
	fi
	#check password of the machine
	./outils/check_message $machine $user & 
	run "$user@$machine>" -n
   ./outils/delete_message
#end of connection
elif [ "$mode" == "-admin" ]
then
	if [ $# != 1 ]
	then 
		echo "wrong number of the arguments"
		exit 1
	fi
	./outils/check_file ./rv
	if [ $? == 0 ]
	then
	        mkdir ./rv
	        mkdir ./rv/vms
	        mkdir ./rv/users
	        touch ./rv/userlist
		mkdir ./rv/online_users
	        touch ./rv/log_admin
		touch ./rv/online_num
		echo "initialize the rv successfully"
	fi

	./outils/check_file ./rv/admin
	if [ $? == 0 ]
	then
	        ./outils/init_admin
	fi
	./outils/admin_login
	./outils/check_passwd admin ./rv/admin 
	if [ $? == 1 ]
	then
		exit 1
	fi
	#check password of root
	if [ $? == 0 ]
	then
		user="admin"
		run "rvsh>" -s
		./outils/admin_logout
	else
		exit 1
	fi
#end of connection

else
	echo "please enter the right options:-admin,-connect"
	exit 1
fi
}


###################################################

flag=1
state=1
mode=$1
user=$3
machine=$2
usernum=$(cat ./rv/online_num)
t=$(tty)
if [ -f ./rv/online_users/$3/num_ter ]
then
	id=$(cat ./rv/online_users/$3/num_ter)
	id=$(($id+1))
else
	id=0
fi
while [ $flag -eq 1 ]
do
	if [ $state == 1 ]
	then
		run_commande $mode $user $machine
	elif [ $state == 2 ]
	then 
		read -p "entre the machine : " machine
		state=1
		run_commande $mode $user $machine
	elif [ $state == 3 ]
	then
		read -p "entre the user : " user
		state=1
		run_commande $mode $user $machine
		#if the user==root then run the admin
	fi
done


